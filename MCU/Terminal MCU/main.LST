C51 COMPILER V7.50   MAIN                                                                  02/10/2015 20:27:28 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Program Files\keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC15Fxx 系列 读取程序区ID号并用软件模拟串口输出显示举例--------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-755-82905966 -------------------------------------------*/
   6          /* --- Tel: 86-755-82948412 -------------------------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* 如果要在程序中使用此代码,请在程序中注明使用了宏晶科技的资料及程序   */
   9          /* 如果要在文章中应用此代码,请在文章中注明使用了宏晶科技的资料及程序   */
  10          /*---------------------------------------------------------------------*/
  11          
  12          //本示例在Keil开发环境下请选择Intel的8058芯片型号进行编译
  13          //假定测试芯片的工作频率为18.432MHz
  14          
  15          #include "reg51.h"
  16          
  17          //-----------------------------------------
  18          //define baudrate const
  19          //BAUD = 65536 - FOSC/3/BAUDRATE/M (1T:M=1; 12T:M=12)
  20          //NOTE: (FOSC/3/BAUDRATE) must be greater then 98, (RECOMMEND GREATER THEN 110)
  21          
  22          #define BAUD    0xFF60                  //38400bps @ 18.432MHz
  23          
  24          
  25          #define ID_ADDR_RAM 0x71                //STC15F104W系列ID号的存放在RAM区的地址
  26          //#define ID_ADDR_RAM 0x71              //STC15F104W系列ID号的存放在RAM区的地址
  27          //#define ID_ADDR_RAM 0xF1              //STC15F204EA系列ID号的存放在RAM区的地址
  28          
  29          #define ID_ADDR_ROM 0x0ff9              //STC104W系列ID号的存放在ROM区的地址
  30          
  31          sfr AUXR = 0x8E;
  32          sbit RXB = P3^4;                        //define UART TX/RX port
  33          sbit TXB = P3^5;
  34          
  35          typedef bit BOOL;
  36          typedef unsigned char BYTE;
  37          typedef unsigned int WORD;
  38          
  39          BYTE TBUF,RBUF;
  40          BYTE TDAT,RDAT;
  41          BYTE TCNT,RCNT;
  42          BYTE TBIT,RBIT;
  43          BOOL TING,RING;
  44          BOOL TEND,REND;
  45          
  46          void UART_INIT();
  47          void UART_SEND(BYTE dat);
  48          
  49          BYTE t, r;
  50          BYTE buf[16];
  51          
  52          void main()
  53          {
  54   1      //    BYTE idata *iptr;
  55   1          BYTE code *cptr;
C51 COMPILER V7.50   MAIN                                                                  02/10/2015 20:27:28 PAGE 2   

  56   1          BYTE i;
  57   1          
  58   1          TMOD = 0x00;                        //timer0 in 16-bit auto reload mode
  59   1          AUXR = 0x80;                        //timer0 working at 1T mode
  60   1          TL0 = BAUD;
  61   1          TH0 = BAUD>>8;                      //initial timer0 and set reload value
  62   1          TR0 = 1;                            //tiemr0 start running
  63   1          ET0 = 1;                            //enable timer0 interrupt
  64   1          PT0 = 1;                            //improve timer0 interrupt priority
  65   1          EA = 1;                             //open global interrupt switch
  66   1      
  67   1          UART_INIT();
  68   1      //    iptr = ID_ADDR_RAM;               //从RAM区读取ID号
  69   1      //    for (i=0; i<7; i++)               //读7个字节
  70   1      //    {
  71   1      //        UART_SEND(*iptr++);           //发送ID到串口
  72   1      //    }
  73   1          
  74   1          cptr = ID_ADDR_ROM;                 //从程序区读取ID号
  75   1          for (i=0; i<7; i++)                 //读7个字节
  76   1          {
  77   2              UART_SEND(*cptr++);             //发送ID到串口
  78   2          }
  79   1      
  80   1          while (1);
  81   1      }
  82          
  83          //-----------------------------------------
  84          //Timer interrupt routine for UART
  85          
  86          void tm0() interrupt 1 using 1
  87          {
  88   1          if (RING)
  89   1          {
  90   2              if (--RCNT == 0)
  91   2              {
  92   3                  RCNT = 3;                   //reset send baudrate counter
  93   3                  if (--RBIT == 0)
  94   3                  {
  95   4                      RBUF = RDAT;            //save the data to RBUF
  96   4                      RING = 0;               //stop receive
  97   4                      REND = 1;               //set receive completed flag
  98   4                  }
  99   3                  else
 100   3                  {
 101   4                      RDAT >>= 1;
 102   4                      if (RXB) RDAT |= 0x80;  //shift RX data to RX buffer
 103   4                  }
 104   3              }
 105   2          }
 106   1          else if (!RXB)
 107   1          {
 108   2              RING = 1;                       //set start receive flag
 109   2              RCNT = 4;                       //initial receive baudrate counter
 110   2              RBIT = 9;                       //initial receive bit number (8 data bits + 1 stop bit)
 111   2          }
 112   1      
 113   1          if (--TCNT == 0)
 114   1          {
 115   2              TCNT = 3;                       //reset send baudrate counter
 116   2              if (TING)                       //judge whether sending
 117   2              {
C51 COMPILER V7.50   MAIN                                                                  02/10/2015 20:27:28 PAGE 3   

 118   3                  if (TBIT == 0)
 119   3                  {
 120   4                      TXB = 0;                //send start bit
 121   4                      TDAT = TBUF;            //load data from TBUF to TDAT
 122   4                      TBIT = 9;               //initial send bit number (8 data bits + 1 stop bit)
 123   4                  }
 124   3                  else
 125   3                  {
 126   4                      TDAT >>= 1;             //shift data to CY
 127   4                      if (--TBIT == 0)
 128   4                      {
 129   5                          TXB = 1;
 130   5                          TING = 0;           //stop send
 131   5                          TEND = 1;           //set send completed flag
 132   5                      }
 133   4                      else
 134   4                      {
 135   5                          TXB = CY;           //write CY to TX port
 136   5                      }
 137   4                  }
 138   3              }
 139   2          }
 140   1      }
 141          
 142          //-----------------------------------------
 143          //initial UART module variable
 144          
 145          void UART_INIT()
 146          {
 147   1          TING = 0;
 148   1          RING = 0;
 149   1          TEND = 1;
 150   1          REND = 0;
 151   1          TCNT = 0;
 152   1          RCNT = 0;
 153   1      }
 154          
 155          //-----------------------------------------
 156          //Send UART data
 157          
 158          void UART_SEND(BYTE dat)
 159          {
 160   1          while (!TEND);
 161   1          TEND = 0;
 162   1          TBUF = dat;
 163   1          TING = 1;
 164   1      }
 165          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    191    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
